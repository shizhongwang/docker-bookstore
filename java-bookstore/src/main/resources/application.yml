logging:
  config: classpath:log4j2.xml
  level:
    root: INFO
    javax.activation: info
    org.apache.catalina: INFO
    org.apache.commons.beanutils.converters: INFO
    org.apache.coyote.http11.Http11Processor: INFO
    org.apache.http: INFO
    org.apache.tomcat: INFO
    org.springframework: INFO
    com.bookstore: DEBUG

spring:
  #  data:
  #    rest:
  #      base-path: /api/v1
  #  main:
  #    banner-mode: off
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    #    for docker connection
    #    url: jdbc:mysql://mysql/springbootapps?allowPublicKeyRetrieval=true&useSSL=false

    #    for local connection
    url: jdbc:mysql://127.0.0.1:3306/springbootapps?allowPublicKeyRetrieval=true&useSSL=false
    username: root
    password: root
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.MySQL5InnoDBDialect
  servlet:
    multipart:
      max-file-size: 1024MB
      max-request-size: 1024MB

file:
  path: /Users/tianpuyang/uploadPath/file/

global:
  debug: true

management:
  endpoint:
    shutdown:
      enabled: true      # 开启shutdown功能
  endpoints:
    web:
      exposure:
        # all Actuator endpoints are to be exposed only in clp-dev env
        include: "*"

#  spring.datasource.url=jdbc:mysql://localhost:3306/test
#  spring.datasource.username=root
#  spring.datasource.password=root
#  spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#  spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect


# ## Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
# spring.datasource.url = jdbc:mysql://mysql/tianmiao?allowPublicKeyRetrieval=true&useSSL=false
# spring.datasource.username = root
# spring.datasource.password = root


# ## Hibernate Properties
# # The SQL dialect makes Hibernate generate better SQL for the chosen database
# spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect

# # Hibernate ddl auto (create, create-drop, validate, update)
# spring.jpa.hibernate.ddl-auto = update
